<diagram program="umletino" version="14.4.0-SNAPSHOT"><zoom_level>10</zoom_level><help_text>// Uncomment the following line to change the fontsize and font:
fontsize=12
fontfamily=Monospaced //possible: SansSerif,Serif,Monospaced


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text><element><id>UMLClass</id><coordinates><x>128</x><y>220</y><w>220</w><h>90</h></coordinates><panel_attributes>Tetris
--
# initResources(): any
# initGame()
# initViews(): { [key: string]: View }
fg=black
bg=white</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>398</x><y>220</y><w>190</w><h>110</h></coordinates><panel_attributes>StartView
--
+ init(Game)
+ listen(Input)
+ draw(...)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>98</x><y>30</y><w>280</w><h>100</h></coordinates><panel_attributes>/Game/
--
/# initResources(): any/
/# initGame()/
/# initViews(): { [key: string]: View }/
bg=gray</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>228</x><y>120</y><w>30</w><h>120</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;100</additional_attributes></element><element><id>UMLClass</id><coordinates><x>498</x><y>0</y><w>290</w><h>150</h></coordinates><panel_attributes>/View/
--
+ draw(...)
+ move(...)
# drawImage(...)
# writeTextToCanvas(...)
# drawDebug(...)

bg=gray</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>368</x><y>70</y><w>150</w><h>40</h></coordinates><panel_attributes>lt=-
m1=1
m2=1..n</panel_attributes><additional_attributes>10;10;130;10</additional_attributes></element><element><id>Relation</id><coordinates><x>488</x><y>140</y><w>100</w><h>100</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>80;10;10;80</additional_attributes></element><element><id>UMLClass</id><coordinates><x>638</x><y>220</y><w>210</w><h>110</h></coordinates><panel_attributes>LevelView
--
- movingBlock: Block
- blocksInPlay: Block[]
--
+ init(Game)
+ listen(Input)
+ draw(...)
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>688</x><y>140</y><w>60</w><h>100</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;40;80</additional_attributes></element><element><id>UMLClass</id><coordinates><x>788</x><y>420</y><w>230</w><h>120</h></coordinates><panel_attributes>/Block/
--
- playingFieldPosition: Vector
- playingFieldSize: Vector
--
+ moveDown()
+ moveLeft()
+ moveRight()</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>888</x><y>240</y><w>160</w><h>80</h></coordinates><panel_attributes>GameItem
--
# _position: Vector
--
...

bg=gray</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>938</x><y>310</y><w>30</w><h>130</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;110</additional_attributes></element><element><id>UMLClass</id><coordinates><x>848</x><y>40</y><w>200</w><h>110</h></coordinates><panel_attributes>Vector
--
- x: number
- y: number
--
+ add(Vector): Vector
+ subtract(Vector): Vector
bg=gray</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>858</x><y>140</y><w>40</w><h>300</h></coordinates><panel_attributes>lt=-
m2=1</panel_attributes><additional_attributes>10;280;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>778</x><y>320</y><w>70</w><h>120</h></coordinates><panel_attributes>lt=-
m2=1..n</panel_attributes><additional_attributes>10;10;40;100</additional_attributes></element><element><id>UMLClass</id><coordinates><x>628</x><y>1010</y><w>230</w><h>140</h></coordinates><panel_attributes>PlayingField
--
- topLeft: Vector
- playingField: Block [] []
- movingBlock: Block
- leftOverBlocks: Block []
--
+ moveDown()
+ moveLeft()
+ moveRight()</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>118</x><y>640</y><w>280</w><h>100</h></coordinates><panel_attributes>/Game/
--
/# initResources(): any/
/# initGame()/
/# initViews(): { [key: string]: View }/
bg=gray</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>518</x><y>640</y><w>290</w><h>150</h></coordinates><panel_attributes>/View/
--
+ draw(...)
+ move(...)
# drawImage(...)
# writeTextToCanvas(...)
# drawDebug(...)

bg=gray</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>138</x><y>830</y><w>220</w><h>90</h></coordinates><panel_attributes>Tetris
--
# initResources(): any
# initGame()
# initViews(): { [key: string]: View }
fg=black
bg=white</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>88</x><y>1140</y><w>200</w><h>110</h></coordinates><panel_attributes>Vector
--
- x: number
- y: number
--
+ add(Vector): Vector
+ subtract(Vector): Vector
bg=gray</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1338</x><y>780</y><w>160</w><h>80</h></coordinates><panel_attributes>GameItem
--
# _position: Vector
--
...

bg=gray</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>408</x><y>860</y><w>190</w><h>110</h></coordinates><panel_attributes>StartView
--
+ init(Game)
+ listen(Input)
+ draw(...)</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>248</x><y>730</y><w>30</w><h>120</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;100</additional_attributes></element><element><id>Relation</id><coordinates><x>388</x><y>680</y><w>150</w><h>40</h></coordinates><panel_attributes>lt=-
m1=1
m2=1..n</panel_attributes><additional_attributes>10;10;130;10</additional_attributes></element><element><id>Relation</id><coordinates><x>508</x><y>780</y><w>100</w><h>100</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>80;10;10;80</additional_attributes></element><element><id>Relation</id><coordinates><x>728</x><y>780</y><w>30</w><h>100</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;80</additional_attributes></element><element><id>Relation</id><coordinates><x>0</x><y>329</y><w>40</w><h>300</h></coordinates><panel_attributes>lt=-
m2=1</panel_attributes><additional_attributes>10;280;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>630</x><y>859</y><w>210</w><h>110</h></coordinates><panel_attributes>LevelView
--
- movingBlock: Block
- blocksInPlay: Block[]
--
+ init(Game)
+ listen(Input)
+ draw(...)
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>958</x><y>1010</y><w>230</w><h>120</h></coordinates><panel_attributes>/Block/
--
- currentPositions: Vector
--
+ getInitialSquares(): boolean [] []
+ newSquare(): Square
+ getCurrentPositions(): Vector []
+ setCurrentPositions(Vector [])</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1308</x><y>990</y><w>230</w><h>120</h></coordinates><panel_attributes>/Square/
--
- currentPositions: Vector []
--
+ getInitialSquares(): boolean [] []
+ getCurrentPositions(): Vector []
+ setCurrentPositions(Vector [])</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>848</x><y>1070</y><w>130</w><h>40</h></coordinates><panel_attributes>lt=-
m1=1
m2=1..n</panel_attributes><additional_attributes>10;10;110;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1178</x><y>1050</y><w>150</w><h>40</h></coordinates><panel_attributes>lt=-
m1=1
m2=1..n</panel_attributes><additional_attributes>10;10;130;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1418</x><y>850</y><w>30</w><h>160</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;140</additional_attributes></element><element><id>Relation</id><coordinates><x>728</x><y>960</y><w>50</w><h>70</h></coordinates><panel_attributes>lt=-
m1=1
m2=1..n</panel_attributes><additional_attributes>10;10;10;50</additional_attributes></element><element><id>UMLClass</id><coordinates><x>968</x><y>1220</y><w>230</w><h>120</h></coordinates><panel_attributes>TBlock
--
+ getInitialSquares(): boolean [] </panel_attributes><additional_attributes></additional_attributes></element></diagram>